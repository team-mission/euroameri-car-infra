# Node.js 18 Alpine 이미지 사용
FROM node:18-alpine

# 작업 디렉토리 설정
WORKDIR /app

# 필요한 패키지 설치 (bcrypt 빌드를 위한 도구들 + MySQL 클라이언트 + curl)
RUN apk add --no-cache python3 make g++ curl mysql-client

# 패키지 매니저를 위한 yarn 설치
RUN corepack enable

# package.json과 yarn.lock 복사
COPY package.json yarn.lock ./

# 의존성 설치 (네트워크 타임아웃 및 재시도 설정)
RUN yarn config set network-timeout 300000 && \
    yarn config set registry https://registry.npmmirror.com && \
    yarn install --frozen-lockfile --production=false --network-timeout 300000 || \
    (yarn config set registry https://registry.yarnpkg.com && yarn install --frozen-lockfile --production=false --network-timeout 300000)

# 전체 소스 코드 복사
COPY . .

# TypeScript 컴파일 (필요한 경우)
RUN yarn global add typescript ts-node

# 포트 노출
EXPOSE 4000

# 헬스체크 제거 (개발 환경)
# HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
#   CMD curl -f http://localhost:4000/health || exit 1

# 개발 환경에서는 nodemon, 프로덕션에서는 ts-node 사용
CMD ["yarn", "dev"]
